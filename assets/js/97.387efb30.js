(window.webpackJsonp=window.webpackJsonp||[]).push([[97],{452:function(_,v,e){"use strict";e.r(v);var c=e(0),a=Object(c.a)({},(function(){var _=this,v=_._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[v("h2",{attrs:{id:"_1-linux常用命令"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-linux常用命令"}},[_._v("#")]),_._v(" 1 Linux常用命令")]),_._v(" "),v("h3",{attrs:{id:"_1-1-系统状况"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-系统状况"}},[_._v("#")]),_._v(" 1.1 系统状况")]),_._v(" "),v("p",[v("code",[_._v("top")]),_._v("：查看所有进程的信息（Linux的任务管理器）。")]),_._v(" "),v("ul",[v("li",[_._v("打开后输入"),v("code",[_._v("M")]),_._v("：按使用内存排序；")]),_._v(" "),v("li",[_._v("打开后输入"),v("code",[_._v("P")]),_._v("：按使用CPU排序；")]),_._v(" "),v("li",[_._v("打开后输入"),v("code",[_._v("q")]),_._v("：退出。")])]),_._v(" "),v("p",[v("code",[_._v("df -h")]),_._v("：查看硬盘使用情况。\n"),v("code",[_._v("free -h")]),_._v("：查看内存使用情况。\n"),v("code",[_._v("du -sh")]),_._v("：查看当前目录占用的硬盘空间。\n"),v("code",[_._v("ps aux")]),_._v("：查看所有进程。\n"),v("code",[_._v("kill -9 pid")]),_._v("：杀死编号为"),v("code",[_._v("pid")]),_._v("的进程。\n"),v("code",[_._v("kill -s SIGTERM pid")]),_._v("：传递某个具体的信号。\n"),v("code",[_._v("netstat -nt")]),_._v("：查看所有网络连接。\n"),v("code",[_._v("w")]),_._v("：列出当前登录的用户。\n"),v("code",[_._v("ping www.baidu.com")]),_._v("：测试网络连接，检查是否联网。")]),_._v(" "),v("h3",{attrs:{id:"_1-2-文件权限"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-文件权限"}},[_._v("#")]),_._v(" 1.2 文件权限")]),_._v(" "),v("p",[v("code",[_._v("chmod")]),_._v("：修改文件权限")]),_._v(" "),v("ul",[v("li",[v("code",[_._v("chmod +x filename")]),_._v("：给"),v("code",[_._v("filename")]),_._v("添加可执行权限；")]),_._v(" "),v("li",[v("code",[_._v("chmod -x filename")]),_._v("：去掉"),v("code",[_._v("filename")]),_._v("的可执行权限；")]),_._v(" "),v("li",[v("code",[_._v("chmod abc filename")]),_._v(":其中a，b，c各为一个数字，表示User、Group以及Other的权限。r=4，w=2，x=1，为读，写，可执行。\n如设置所有人对该文件都可读可写可执行，则设置"),v("code",[_._v("chmod 777 filename")]),_._v("。")])]),_._v(" "),v("h3",{attrs:{id:"_1-3-文件检索"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-文件检索"}},[_._v("#")]),_._v(" 1.3 文件检索")]),_._v(" "),v("p",[v("code",[_._v("find <path>(文件路径) -name '*.py'")]),_._v("：搜索path路径下的所有"),v("code",[_._v("py")]),_._v("文件。\n"),v("code",[_._v("grep xxx")]),_._v("：从"),v("code",[_._v("stdin")]),_._v("中读入若干行数据，如果某行中包含"),v("code",[_._v("xxx")]),_._v("，则输出该行，否则忽略该行。\n"),v("code",[_._v("wc")]),_._v("：统计行数、单词数、字节数。")]),_._v(" "),v("ul",[v("li",[_._v("既可以从"),v("code",[_._v("stdin")]),_._v("中直接读取内容，也可以在命令行参数中传入文件名列表。")]),_._v(" "),v("li",[v("code",[_._v("wc -l")]),_._v("：统计行数。")]),_._v(" "),v("li",[v("code",[_._v("wc -w")]),_._v("：统计单词数。")]),_._v(" "),v("li",[v("code",[_._v("wc -c")]),_._v("：统计字节数。")])]),_._v(" "),v("p",[v("code",[_._v("tree")]),_._v("：展示当前目录的文件结构。")]),_._v(" "),v("ul",[v("li",[v("code",[_._v("tree path")]),_._v("：展示某个目录的文件结构。")]),_._v(" "),v("li",[v("code",[_._v("tree -a")]),_._v("：显示隐藏文件。")])]),_._v(" "),v("p",[v("code",[_._v("ag xxx")]),_._v("：搜索当前目录下的所有文件，检索"),v("code",[_._v("xxx")]),_._v("字符串。\n"),v("code",[_._v("cut")]),_._v("：分割一行内容。")]),_._v(" "),v("ul",[v("li",[_._v("从"),v("code",[_._v("stdin")]),_._v("中读入多行数据。")]),_._v(" "),v("li",[v("code",[_._v("echo $PATH | cut -d ':' -f 3, 5")]),_._v("：输出"),v("code",[_._v("PATH")]),_._v("用"),v("code",[_._v(":")]),_._v("分割后的第3、5列数据。")]),_._v(" "),v("li",[v("code",[_._v("echo $PATH | cut -d ':' -f 3-5")]),_._v("：输出"),v("code",[_._v("PATH")]),_._v("用"),v("code",[_._v(":")]),_._v("分割后的第3-5列数据。")]),_._v(" "),v("li",[v("code",[_._v("echo $PATH | cut -c 3, 5")]),_._v("：输出"),v("code",[_._v("PATH")]),_._v("的第3、5个字符。")]),_._v(" "),v("li",[v("code",[_._v("echo $PATH | cut -c 3-5")]),_._v("：输出"),v("code",[_._v("PATH")]),_._v("的第3-5个字符。")])]),_._v(" "),v("p",[v("code",[_._v("sort")]),_._v("：将每行内容按字典序排序。")]),_._v(" "),v("ul",[v("li",[_._v("可以从"),v("code",[_._v("stdin")]),_._v("中读取多行数据。")]),_._v(" "),v("li",[_._v("可以从命令行参数中读取文件名列表。")])]),_._v(" "),v("p",[v("code",[_._v("xargs")]),_._v("：将"),v("code",[_._v("stdin")]),_._v("中的数据用空格或回车分割成命令行参数，作为其他命令使用。")]),_._v(" "),v("ul",[v("li",[v("code",[_._v("find . -name '*.py' | xargs cat | wc -l")]),_._v("：统计当前目录下所有python文件的总行数。")])]),_._v(" "),v("h3",{attrs:{id:"_1-4-查看文件内容"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-查看文件内容"}},[_._v("#")]),_._v(" 1.4 查看文件内容")]),_._v(" "),v("p",[v("code",[_._v("more")]),_._v("：浏览文件内容。")]),_._v(" "),v("ul",[v("li",[_._v("回车或空格：下一行。")]),_._v(" "),v("li",[v("code",[_._v("b")]),_._v("：上一页。")]),_._v(" "),v("li",[v("code",[_._v("q")]),_._v("：退出。")])]),_._v(" "),v("p",[v("code",[_._v("less")]),_._v("：和"),v("code",[_._v("more")]),_._v("类似，功能更全。")]),_._v(" "),v("ul",[v("li",[_._v("回车：下一行。")]),_._v(" "),v("li",[v("code",[_._v("y")]),_._v("：上一行。")]),_._v(" "),v("li",[v("code",[_._v("Page Down")]),_._v("：下一页。")]),_._v(" "),v("li",[v("code",[_._v("Page Up")]),_._v("：上一页。")]),_._v(" "),v("li",[v("code",[_._v("q")]),_._v("：退出。")])]),_._v(" "),v("p",[v("code",[_._v("head -3 xxx")]),_._v("：显示"),v("code",[_._v("xxx")]),_._v("的前3行内容。")]),_._v(" "),v("ul",[v("li",[_._v("同时支持从"),v("code",[_._v("stdin")]),_._v("读入内容。")])]),_._v(" "),v("p",[v("code",[_._v("tail -3 xxx")]),_._v("：显示"),v("code",[_._v("xxx")]),_._v("末尾3行内容。")]),_._v(" "),v("ul",[v("li",[_._v("同时支持从"),v("code",[_._v("stdin")]),_._v("读入内容。")])]),_._v(" "),v("h3",{attrs:{id:"_1-5-用户相关"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-5-用户相关"}},[_._v("#")]),_._v(" 1.5 用户相关")]),_._v(" "),v("p",[v("code",[_._v("history")]),_._v("：展示当前用户的历史操作。内容存放在"),v("code",[_._v("~/bash_history")]),_._v("中。")]),_._v(" "),v("h3",{attrs:{id:"_1-6-工具"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-6-工具"}},[_._v("#")]),_._v(" 1.6 工具")]),_._v(" "),v("p",[v("code",[_._v("md5Sum")]),_._v("：计算"),v("code",[_._v("md5")]),_._v("的哈希值。")]),_._v(" "),v("ul",[v("li",[_._v("也可以从"),v("code",[_._v("stdin")]),_._v("中读入内容，也可以在命令行参数中传入文件名列表。")])]),_._v(" "),v("p",[v("code",[_._v("time command")]),_._v("：统计"),v("code",[_._v("command")]),_._v("命令的执行时间。\n"),v("code",[_._v("ipython3")]),_._v("：交互式python环境。可以当作计算器，或者批量管理文件。\n"),v("code",[_._v("i command")]),_._v("："),v("code",[_._v("!")]),_._v("表示执行"),v("code",[_._v("shell")]),_._v("脚本命令。\n"),v("code",[_._v("watch -n 0.1 command")]),_._v("：每隔0.1s就执行一次"),v("code",[_._v("command")]),_._v("命令。\n"),v("code",[_._v("tar")]),_._v("：压缩文件。")]),_._v(" "),v("ul",[v("li",[v("code",[_._v("tar -zcvf xxx.tar.gz /path")]),_._v("：压缩。")]),_._v(" "),v("li",[v("code",[_._v("tar -zxvf xxx.tar.gz")]),_._v("：解压缩。")])]),_._v(" "),v("p",[v("code",[_._v("diff xxx yyy")]),_._v("：查看文件"),v("code",[_._v("xxx")]),_._v("和"),v("code",[_._v("yyy")]),_._v("的不同点。")]),_._v(" "),v("h3",{attrs:{id:"_1-7-安装软件"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-7-安装软件"}},[_._v("#")]),_._v(" 1.7 安装软件")]),_._v(" "),v("p",[v("code",[_._v("sudo command")]),_._v("：以"),v("code",[_._v("root")]),_._v("身份运行"),v("code",[_._v("command")]),_._v("命令。\n"),v("code",[_._v("apt-get install xxx")]),_._v("：安装"),v("code",[_._v("xxx")]),_._v("软件。\n"),v("code",[_._v("pip install xxx --user --upgrade")]),_._v("：安装python包。")]),_._v(" "),v("h2",{attrs:{id:"_2-管道"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-管道"}},[_._v("#")]),_._v(" 2 管道")]),_._v(" "),v("h3",{attrs:{id:"_2-1-管道命令"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-管道命令"}},[_._v("#")]),_._v(" 2.1 管道命令")]),_._v(" "),v("p",[_._v("管道命令操作符是"),v("code",[_._v("|")]),_._v("，,它只能处理经由前面一个指令传出的正确输出信息，对错误信息信息没有直接处理能力。然后传递给下一个命令，作为标准的输入。\n下图为管道命令的输出说明：\n"),v("img",{attrs:{src:"https://raw.githubusercontent.com/unique-pure/NewPicGoLibrary/main/img/watermark%2Ctype_d3F5LXplbmhlaQ%2Cshadow_50%2Ctext_Q1NETiBAdW5pcXVlX3B1cnN1aXQ%3D%2Csize_20%2Ccolor_FFFFFF%2Ct_70%2Cg_se%2Cx_16-20231125214459645.png",alt:""}}),_._v("\n【指令1】正确输出，作为【指令2】的输入，然后【指令2】的输出作为【指令3】的输入 ，【指令3】输出就会直接显示在屏幕上面了。\n通过管道之后，我们发现【指令1】和【指令2】的正确输出不显示在屏幕上面，只显示指令3的输出。")]),_._v(" "),v("p",[_._v("其类似于之前学习的文件重定向，可以将前面一个命令的"),v("code",[_._v("stdout")]),_._v("重定向下一个命令的"),v("code",[_._v("stdin")]),_._v("。但与文件重定向有很大区别：文件重定向左边为命令，右边为文件；管道左右两边均为命令，左边有"),v("code",[_._v("stdout")]),_._v("，右边有"),v("code",[_._v("stdin")]),_._v("。")]),_._v(" "),v("p",[_._v("值得注意的点：")]),_._v(" "),v("ul",[v("li",[_._v("管道命令仅能处理"),v("code",[_._v("stdout")]),_._v("，忽略"),v("code",[_._v("stderr")]),_._v("。")]),_._v(" "),v("li",[_._v("管道右边的命令必须能接受"),v("code",[_._v("stdin")]),_._v("。")]),_._v(" "),v("li",[_._v("多个管道命令可以串联。")])]),_._v(" "),v("h3",{attrs:{id:"_2-2-实例"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-实例"}},[_._v("#")]),_._v(" 2.2 实例")]),_._v(" "),v("ul",[v("li",[_._v("统计当前目录下所有python文件的总行数\n统计总行数，在前面常用命令学习中，我们已经会了："),v("code",[_._v("wc -l")]),_._v("，统计当前目录所有的python文件，也易得为："),v("code",[_._v("find . -name '*.py'")]),_._v("。那么我们需要解决的问题则是将所有python文件选出来得到其内容再统计。我们则可能会这样："),v("code",[_._v("find . -name '*.py' | cat | wc -l")]),_._v("。但"),v("code",[_._v("find . -name '*.py'")]),_._v("得到的是字符串，我们还需要利用"),v("code",[_._v("xargs")]),_._v("将字符串分割作为命令行参数，这样即可达到效果。\n即："),v("code",[_._v("find . -name '*.py' | xargs cat | wc -l")]),_._v("。")])]),_._v(" "),v("h2",{attrs:{id:"_3-环境变量"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3-环境变量"}},[_._v("#")]),_._v(" 3 环境变量")]),_._v(" "),v("h3",{attrs:{id:"_3-1-概念"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-概念"}},[_._v("#")]),_._v(" 3.1 概念")]),_._v(" "),v("p",[_._v("Linux系统中会用很多环境变量来记录配置信息。环境变量类似于全局变量，可以被各个进程访问到。我们可以通过修改环境变量来方便地修改系统配置。")]),_._v(" "),v("h3",{attrs:{id:"_3-2-查看环境变量"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-查看环境变量"}},[_._v("#")]),_._v(" 3.2 查看环境变量")]),_._v(" "),v("ul",[v("li",[_._v("列出当前环境下的所有环境变量：")])]),_._v(" "),v("div",{staticClass:"language-powershell line-numbers-mode"},[v("pre",{pre:!0,attrs:{class:"language-powershell"}},[v("code",[_._v("env "),v("span",{pre:!0,attrs:{class:"token comment"}},[_._v("# 显示当前用户的变量；")]),_._v("\n"),v("span",{pre:!0,attrs:{class:"token function"}},[_._v("set")]),_._v(" "),v("span",{pre:!0,attrs:{class:"token comment"}},[_._v("# 显示当前shell的变量，包含当前用户的变量；")]),_._v("\nexport "),v("span",{pre:!0,attrs:{class:"token comment"}},[_._v("# 显示当前导出成用户变量的shell变量。")]),_._v("\n")])]),_._v(" "),v("div",{staticClass:"line-numbers-wrapper"},[v("span",{staticClass:"line-number"},[_._v("1")]),v("br"),v("span",{staticClass:"line-number"},[_._v("2")]),v("br"),v("span",{staticClass:"line-number"},[_._v("3")]),v("br")]),v("div",{staticClass:"line-numbers-wrapper"},[v("span",{staticClass:"line-number"},[_._v("1")]),v("br"),v("span",{staticClass:"line-number"},[_._v("2")]),v("br"),v("span",{staticClass:"line-number"},[_._v("3")]),v("br")])]),v("ul",[v("li",[_._v("输出某个环境变量的值："),v("code",[_._v("echo $PATH")])])]),_._v(" "),v("h3",{attrs:{id:"_3-3-修改环境变量"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-修改环境变量"}},[_._v("#")]),_._v(" 3.3 修改环境变量")]),_._v(" "),v("p",[_._v("修改环境变量我们可以先将修改命令放到"),v("code",[_._v("~/.bashrc")]),_._v("文件中。修改完之后需执行"),v("code",[_._v("source ~/.bashrc")]),_._v("，来将修改应用到当前的"),v("code",[_._v("bash")]),_._v("环境下。")]),_._v(" "),v("p",[_._v("为何将修改命令放到"),v("code",[_._v("~/.bashrc")]),_._v("，就可以确保修改会影响未来所有的环境呢？")]),_._v(" "),v("ul",[v("li",[_._v("每次启动"),v("code",[_._v("bash")]),_._v("，都会先执行"),v("code",[_._v("~/.bashrc")]),_._v("。")]),_._v(" "),v("li",[_._v("每次"),v("code",[_._v("ssh")]),_._v("登录远程服务器，都会启动一个"),v("code",[_._v("bash")]),_._v("命令行给我们。")]),_._v(" "),v("li",[_._v("每次"),v("code",[_._v("tmux")]),_._v("新开一个"),v("code",[_._v("pane")]),_._v("，都会启动一个"),v("code",[_._v("bash")]),_._v("命令行给我们。")]),_._v(" "),v("li",[_._v("未来所有的新开环境都会加载我们修改的内容。")])]),_._v(" "),v("h3",{attrs:{id:"_3-4-常见环境变量"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-常见环境变量"}},[_._v("#")]),_._v(" 3.4 常见环境变量")]),_._v(" "),v("p",[v("code",[_._v("HOME")]),_._v("：用户的家目录\n"),v("code",[_._v("PATH")]),_._v("：可执行文件（命令）的存储路径。路径与路径之间用"),v("code",[_._v(":")]),_._v("分隔。当某个可执行文件同时出现多个路径中时，会选择从左到右数第一个路径中的执行。下列所有存储路径的环境变量，均采用从左到右的优先顺序。\n"),v("code",[_._v("LD_LIBRARY_PATH")]),_._v("：用于指定动态链接库(.so文件)的路径，其内容是以冒号分隔的路径列表。\n"),v("code",[_._v("C_INCLUDE_PATH")]),_._v("：C语言的头文件路径，内容是以冒号分隔的路径列表。\n"),v("code",[_._v("CPLUS_INCLUDE_PATH")]),_._v("：CPP的头文件路径，内容是以冒号分隔的路径列表。\n"),v("code",[_._v("PYTHONPATH")]),_._v("：Python导入包的路径，内容是以冒号分隔的路径列表。\n"),v("code",[_._v("JAVA_HOME")]),_._v("：jdk的安装目录。\n"),v("code",[_._v("CLASSPATH")]),_._v("：存放Java导入类的路径，内容是以冒号分隔的路径列表。")])])}),[],!1,null,null,null);v.default=a.exports}}]);